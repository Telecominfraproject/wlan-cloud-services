app.name=AllCloudInOneServerWithOpensyncGateway

#
#Select spring profiles
#
# valid values for security profiles are: no_ssl, use_ssl
# valid values for auth profiles are: no_auth, form_based_auth, http_basic_auth, http_digest_auth, client_certificate_auth 
#
# Use spring.profiles.include property to specify static collection of profiles that are 
# 	always present in this configuration, regardless of spring.profiles.active property 
# Note: this property is additive, its value is always added to the list of active profiles
#spring.profiles.include=use_ssl,http_basic_auth,use_single_ds,rest-template-single-user-per-service-digest-auth
#spring.profiles.include=use_ssl,client_certificate_auth,use_single_ds,RestTemplateConfiguration_X509_client_cert_auth
#spring.profiles.include=use_ssl_with_client_cert_and_basic_auth,client_certificate_and_basic_auth,use_single_ds,RestTemplateConfiguration_X509_client_cert_auth
#spring.profiles.include=use_ssl,webtoken_auth,use_single_ds,RestTemplateConfiguration_X509_client_cert_auth
spring.profiles.include=use_ssl_with_client_cert_and_webtoken_auth,client_certificate_and_webtoken_auth,use_single_ds,RestTemplateConfiguration_X509_client_cert_auth,purgeOldServiceMetrics,purgeOldSystemEvents,opensync_cloud_config,mqtt_receiver,ovsdb_redirector,ovsdb_manager

#This is needed for MQTT client
mqtt.javax.net.ssl.keyStore=/opt/tip-wlan/certs/client_keystore.jks
mqtt.javax.net.ssl.keyStorePassword=mypassword
mqtt.javax.net.ssl.trustStore=/opt/tip-wlan/certs/truststore.jks
mqtt.javax.net.ssl.trustStorePassword=mypassword

# Replace this with real hostname, like opensync-wifi-controller
connectus.ovsdb.managerAddr=127.0.0.1
connectus.ovsdb.listenPort=6640
connectus.ovsdb.redirector.listenPort=6643
connectus.ovsdb.timeoutSec=30
connectus.ovsdb.trustStore=/opt/tip-wlan/certs/truststore.jks
connectus.ovsdb.trustStorePassword=mypassword
connectus.ovsdb.keyStore=/opt/tip-wlan/certs/server.pkcs12
connectus.ovsdb.keyStorePassword=mypassword

# Replace this with real hostname, like opensync-mqtt-broker
connectus.mqttBroker.address=127.0.0.1
connectus.mqttBroker.listenPort=1883

# Configuration for AP Auto-provisioning
connectus.ovsdb.wifi-iface.default_bridge=br-lan
connectus.ovsdb.autoProvisionedCustomerId=2
connectus.ovsdb.autoProvisionedSsid=Connectus-cloud


spring.main.show-banner=false
# primary port uses client-certificate auth
server.port=9092
#secondary port uses webtoken auth
tip.wlan.secondaryPort=9091

tip.wlan.introspectTokenApi.host=localhost:9091
tip.wlan.introspectTokenApi.clientToken=token_placeholder

#settings for the purge jobs - delete metrics and events older than 4 hours
tip.wlan.purgeServiceMetricsOlderThanSec=14400
tip.wlan.purgeSystemEventsOlderThanSec=14400

#this works for spring 1.2.2+ - can uncomment these (and remove corresponding code from ServletContainerCustomizer)
#server.tomcat.compression=on
#server.tomcat.compressableMimeTypes=application/json,application/xml,text/html,text/xml,text/plain

tip.wlan.listOfPathsToProtect=/portal,/api,/filestore

#this server only supports REST requests, CSRF would get in the way
tip.wlan.csrf-enabled=false
tip.wlan.httpClientConfig=classpath:httpClientConfig.json
#this user/password is used together with http_digest_auth and http_basic_auth spring profiles
tip.wlan.serviceUser=user
# The value in here is bcrypt-encoded string "password", generated with the following command
#  htpasswd -nBC 10 "" | cut -d ':' -f2
tip.wlan.servicePassword=$2y$10$rXnaSR5q2PsFWs8WEfJAguKAPh0oHLFkAJFqd7Pf7PVa3cOIClGoS

#server.session-timeout= # session timeout in seconds
#server.tomcat.max-threads = 0 # number of threads in protocol handler

#server.context-path= # the context path, defaults to '/'
#server.servlet-path= # the servlet path, defaults to '/'
#server.tomcat.access-log-pattern= # log pattern of the access log
#server.tomcat.access-log-enabled=false # is access logging enabled

# pretty print JSON
spring.jackson.serialization.INDENT_OUTPUT=TRUE
# sort keys
#http.mappers.json-sort-keys=false 

#spring.jmx.enabled=true # Expose MBeans from Spring

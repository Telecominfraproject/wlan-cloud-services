openapi: 3.0.3
info:
  title: CloudSDK Profile API
  description: APIs that provide services for viewing, updating and deleting various data elements of profiles.
  version: 1.0.0
servers:
  - url: https://localhost:9091
    description: Local Dev server
  - url: https://10.0.0.61:9091
    description: Local Dev server - all-in-one
  - url: https://192.168.0.143:9051
    description: Local Dev server - portal, prov, and ssc
    
tags:
- name: Data Model Overview
- name: Profile Data
  
    
components:
  securitySchemes:
    tip_wlan_ts_auth:
      type: http
      scheme: bearer
      
  responses:
    GenericApiError:
      description: this object is returned in the cases when an API throws an exception
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JsonSerializedException'
            
  schemas:
    
#
#Generic data models used for many APIs
#
    GenericResponse:
      properties:
        message:
          type: string
        success:
          type: boolean
          
    JsonSerializedException:
      description: this object is returned in the cases when an API throws an exception
      properties:
        exType:
          type: string
          enum:
            - IllegalStateException
        error:
          description: error message
          type: string
        path:
          description: API path with parameters that produced the exception
          type: string
        timestamp:
          description: time stamp of when the exception was generated
          type: integer
          format: int64
          
#
# Service Profile data models
#
    
          
    ProfileType:
      type: string
      enum:
        - equipment_ap
        - equipment_switch
        - ssid
        - bonjour
        - radius
        - captive_portal
        - mesh

    Profile:
      description: Each AccessPoint refers to at most one profile of type equipment_ap. Each ApNetworkConfiguration (equipment_ap) profile refers to 0-N SSID profiles via its childProfileIds property. Each SSID profile refers to at most 1 Captive Portal Profile and 1 Bonjour Gateway Profile and 1 RADIUS Service Profile via its childProfileIds property. Each Captive Portal Profile refers to at most 1 RADIUS Service Profile via its childProfileIds property.
      type: object
      properties:
        id:
          type: integer
          format: int64
        profileType:
          $ref: '#/components/schemas/ProfileType'
        customerId:
          type: integer
          format: int32
        name:
          type: string
        childProfileIds:
          type: array
          items:
            type: integer
            format: int64
        details:
           $ref: '#/components/schemas/ProfileDetailsChildren'
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          description: must be provided for update operation, update will be rejected if provided value does not match the one currently stored in the database
          type: integer
          format: int64
      example:
        profileType: equipment_ap
        customerId: 2
        name: example AP profile

    ProfileDetails:
      description: Place to put extended profile properties specific to each type of the profile.
      type: object
      discriminator:
        propertyName: model_type
      properties:
        model_type:
          type: string
          enum:
          - BonjourGatewayProfile
          - CaptivePortalConfiguration
          - ApNetworkConfiguration
          - MeshGroup
          - RadiusProfile
          - SsidConfiguration
      required: 
        - model_type

    ProfileDetailsChildren:
      oneOf:
        - $ref: '#/components/schemas/BonjourGatewayProfile'
        - $ref: '#/components/schemas/CaptivePortalConfiguration'
        - $ref: '#/components/schemas/ApNetworkConfiguration'
        - $ref: '#/components/schemas/MeshGroup'
        - $ref: '#/components/schemas/RadiusProfile'
        - $ref: '#/components/schemas/SsidConfiguration'
      discriminator:
        propertyName: model_type
        
    BonjourGatewayProfile:
      description: Properties for the Bonjour Gateway profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - BonjourGatewayProfile
          profileDescription:
            type: string
          bonjourServices:
            type: array
            items:
              $ref: '#/components/schemas/BonjourServiceSet'

    BonjourServiceSet:
      type: object
      properties:
        vlanId:
          type: integer
          format: int16
        supportAllServices:
          type: boolean
        serviceNames:
          type: array
          items:
            type: string
            
    CaptivePortalConfiguration:
      description: Properties for the Captive Portal Service profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - CaptivePortalConfiguration
          browserTitle:
            type: string
          headerContent:
            type: string
          userAcceptancePolicy:
            type: string
          successPageMarkdownText:          
            type: string
          redirectURL:
            type: string
          externalCaptivePortalURL:
            type: string
          sessionTimeoutInMinutes:
            type: integer
            format: int32
          logoFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          backgroundFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          walledGardenWhitelist:
            type: array
            items:
              type: string
          usernamePasswordFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          authenticationType:
            $ref: '#/components/schemas/CaptivePortalAuthenticationType'
          radiusAuthMethod:
            $ref: '#/components/schemas/RadiusAuthenticationMethod'
          maxUsersWithSameCredentials:
            type: integer
            format: int32
          externalPolicyFile:
            $ref: '#/components/schemas/ManagedFileInfo'
          backgroundPosition:
            $ref: '#/components/schemas/BackgroundPosition'
          backgroundRepeat:
            $ref: '#/components/schemas/BackgroundRepeat'
          radiusServiceName:
            type: string
          expiryType:
            $ref: '#/components/schemas/SessionExpiryType'
          userList:
            type: array
            items:
              $ref: '#/components/schemas/TimedAccessUserRecord'
          macWhiteList:
            type: array
            items:
              $ref: '#/components/schemas/MacWhitelistRecord'

    ManagedFileInfo:
      type: object
      properties:
        md5checksum:
          type: array
          items:
            type: integer
            format: byte
        lastModifiedTimestamp:
          type: integer
          format: int64
        apExportUrl:
          type: string
        fileCategory:
          $ref: '#/components/schemas/FileCategory'
        fileType:
          $ref: '#/components/schemas/FileType'
        altSlot:
          type: boolean
          
    FileCategory:
      type: string
      enum:
      - CaptivePortalLogo
      - CaptivePortalBackground
      - ExternalPolicyConfiguration
      - UsernamePasswordList
      - DeviceMacBlackList
      - DoNotSteerClientList

    FileType:
      type: string
      enum:
      - PNG
      - JPG
      - PROTOBUF


    CaptivePortalAuthenticationType:
      type: string
      enum:
      - guest
      - username
      - radius
      - external

    RadiusAuthenticationMethod:
      type: string
      enum:
      - PAP
      - CHAP
      - MSCHAPv2

    BackgroundPosition:
      type: string
      enum:
      - left_top
      - left_center
      - left_bottom
      - right_top
      - right_center
      - right_bottom
      - center_top
      - center_center
      - center_bottom

    BackgroundRepeat:
      type: string
      enum:
      - repeat_x
      - repeat_y
      - repeat
      - space
      - round
      - no_repeat
      - cover
    
    SessionExpiryType:
      type: string
      enum:
      - time_limited
      - unlimited

    TimedAccessUserRecord:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        activationTime:
          type: integer
          format: int64
        expirationTime:
          type: integer
          format: int64
        numDevices:
          type: integer
          format: int32
        userDetails:
          $ref: '#/components/schemas/TimedAccessUserDetails'
        userMacAddresses:
          type: array
          items:
            $ref: '#/components/schemas/MacAddress'
        lastModifiedTimestamp:
          type: integer
          format: int64
    
    TimedAccessUserDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        passwordNeedsReset:
          type: boolean
          
    MacAddress:
      type: object
      properties:
        addressAsString:
          type: string
      
    MacWhitelistRecord:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        notes:
          type: string
        lastModifiedTimestamp:
          type: integer
          format: int64
      

    ApNetworkConfiguration:
      description: Properties for the AP Network Configuration profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - ApNetworkConfiguration
          networkConfigVersion:
            type: string
            enum:
            - AP-1
          equipmentType:
            type: string
            enum:
            - AP
          vlanNative:
            type: boolean
          vlan:
            type: integer
            format: int32
          ntpServer:
            $ref: '#/components/schemas/AutoOrManualString'
          syslogRelay:
            $ref: '#/components/schemas/SyslogRelay'
          rtlsSettings:
            $ref: '#/components/schemas/RtlsSettings'
          syntheticClientEnabled:
            type: boolean
          ledControlEnabled:
            type: boolean
          equipmentDiscovery:
            type: boolean
          radioMap:
            $ref: '#/components/schemas/RadioProfileConfigurationMap'


    RadioProfileConfigurationMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is5GHzU:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is5GHzL:
          $ref: '#/components/schemas/RadioProfileConfiguration'
        is2dot4GHz:
          $ref: '#/components/schemas/RadioProfileConfiguration'

    RadioProfileConfiguration:
      properties:
        bestApEnabled:
          type: boolean
        bestAPSteerType:
          $ref: '#/components/schemas/BestAPSteerType'

    SyslogRelay:
      type: object
      properties:
        enabled:
          type: boolean
        srvHostIp:
          type: string
        srvHostPort:
          type: integer
          format: int32
        severity:
          $ref: '#/components/schemas/SyslogSeverityType'
    
    
    SyslogSeverityType:
      type: string
      enum:
      - EMERG
      - ALERT
      - CRIT
      - ERR
      - WARING
      - NOTICE
      - INFO
      - DEBUG

    RtlsSettings:
      type: object
      properties:
        enabled:
          type: boolean
        srvHostIp:
          type: string
        srvHostPort:
          type: integer
          format: int32
      
    
    MeshGroup:
      description: Properties for the Mesh Group profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - MeshGroup
          property:
            $ref: '#/components/schemas/MeshGroupProperty'
          members:
            type: array
            items:
              $ref: '#/components/schemas/MeshGroupMember'
              
    MeshGroupProperty:
      properties:
        name:
          type: string
        locationId:
          type: integer
          format: int64
        ethernetProtection:
          type: boolean

    MeshGroupMember:
      properties:
        mashMode:
          $ref: '#/components/schemas/ApMeshMode'
        equipmentId:
          type: integer
          format: int64
        createdTimestamp:
          type: integer
          format: int64
        lastModifiedTimestamp:
          type: integer
          format: int64

    ApMeshMode:
      description: STANDALONE = no mesh. MESH_PORTAL = Wired AP, accepting wireless connections from MESH_POINTs. MESH_POINT = Extender AP. connects to MESH_PORTAL.
      type: string
      enum:
      - STANDALONE
      - MESH_PORTAL
      - MESH_POINT

    RadiusProfile:
      description: Properties for the RADIUS profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - RadiusProfile
          subnetConfiguration:
            $ref: '#/components/schemas/RadiusSubnetConfigurationMap'
          serviceRegionMap:
            $ref: '#/components/schemas/RadiusServiceRegionMap'
            
    RadiusSubnetConfigurationMap:
      description: Map of subnet configurations. Key is the subnet name, value is the actual configuration.
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RadiusSubnetConfiguration'

    RadiusServiceRegionMap:
      description: Map of Radius Service Regions, keyed by Region Name
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RadiusServiceRegion'
    
    RadiusSubnetConfiguration:
      properties:
        serviceRegionName:
          type: string
        subnetName:
          type: string
        proxyConfig:
          $ref: '#/components/schemas/RadiusProxyConfiguration'
        probeInterval:
          description: Synthentic client probing internval (seconds). Use 0 or null for disable.
          type: integer
          format: int32
        subnetAddress:
          description: Subnet IpAddress
          type: string
        subnetCidrPrefix:
          type: integer
          format: int32
          
    RadiusProxyConfiguration:
      properties:
        floatingIpAddress:
          description: Proxy server floating IP address
          type: string
        floatingIfCidrPrefix:
          description: Optional subnet CIDR prefix for floating IP address. Required if different floating IP address is outside of the the management subnet.
          type: integer
          format: int32
        floatingIfGwAddress:
          description: Optional Gateway IP Address for the floating IP interface
          type: string
        floatingIfVlan:
          description: Optional VLAN id for the floating IP interface
          type: integer
          format: int32
        sharedSecret:
          description: Shared secret used to communicate with the proxy server
          type: string
        
    
    RadiusServiceRegion:
      description: Region with the same set of Radius Service Configurations
      properties:
        regionName:
          description: Named server mapping
          type: string
          default: Default
        serverMap:
          $ref: '#/components/schemas/RadiusServerMap'
        
    RadiusServerMap:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: '#/components/schemas/RadiusServer'
          
    RadiusServer:
      properties:
        ipAddress:
          type: string
        secret:
          type: string
        authPort:
          type: integer
          format: int32
        timeout:
          type: integer
          format: int32
        
    

    SsidConfiguration:
      description: Properties for the SSID Configuration profile.
      allOf:
      - $ref: '#/components/schemas/ProfileDetails'
      - type: object
        properties:
          model_type:
            type: string
            enum:
            - SsidConfiguration
          ssid:
            type: string
          appliedRadios:
            type: array
            items:
              $ref: '#/components/schemas/RadioType'
          ssidAdminState:
            $ref: '#/components/schemas/StateSetting'
          secureMode:
            $ref: '#/components/schemas/SsidSecureMode'
          vlanId:
            type: integer
            format: int32
          keyStr:
            type: string
          broadcastSsid:
            $ref: '#/components/schemas/StateSetting'
          keyRefresh:
            type: integer
            format: int32
            default: 0
          noLocalSubnets:
            type: boolean
          radiusServiceName:
            type: string
          captivePortalId:
            description: id of a CaptivePortalConfiguration profile, must be also added to the children of this profile
            type: integer
            format: int64
          bandwidthLimitDown:
            type: integer
            format: int64
          bandwidthLimitUp:
            type: integer
            format: int64
          videoTrafficOnly:
            type: boolean
          radioBasedConfigs:
            $ref: '#/components/schemas/RadioBasedSsidConfigurationMap'
          bonjourGatewayProfileId:
            description: id of a BonjourGateway profile, must be also added to the children of this profile
            type: integer
            format: int64
          enable80211w:
            type: boolean
          wepConfig:
            $ref: '#/components/schemas/WepConfiguration'
          forwardMode:
            $ref: '#/components/schemas/NetworkForwardMode'
            
    SsidSecureMode:
      type: string
      enum:
      - open
      - wpaPSK
      - wpa2PSK
      - wpaRadius
      - wpa2Radius
      - wpa2OnlyPSK
      - wpa2OnlyRadius
      - wep
      
    RadioBasedSsidConfigurationMap:
      properties:
        is5GHz:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is5GHzU:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is5GHzL:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
        is2dot4GHz:
          $ref: '#/components/schemas/RadioBasedSsidConfiguration'
      
    RadioBasedSsidConfiguration:
      properties:
        enable80211r:
          type: boolean
        enable80211k:
          type: boolean
        enable80211v:
          type: boolean
          
    WepConfiguration:
      properties:
        primaryTxKeyId:
          type: integer
          format: int32
        wepKeys:
          type: array
          items:
            $ref: '#/components/schemas/WepKey'
        wepAuthType:
          $ref: '#/components/schemas/WepAuthType'
          
    WepAuthType:
      type: string
      enum:
      - open
      - shared
    
    WepKey:
      properties:
        txKey:
          type: string
        txKeyConverted:
          type: string
        txKeyType:
          $ref: '#/components/schemas/WepType'
        
    WepType:
      type: string
      enum:
      - wep64
      - wep128

#
# Objects related to pagination
#

    SortOrder:
      type: string
      default: asc
      enum:
      - asc
      - desc
    
    SortColumnsProfile:
      type: object
      required:
      - model_type
      - columnName
      - sortOrder
      properties: 
        model_type:
          type: string
          enum:
          - ColumnAndSort
        columnName:
          type: string
          default: id
          enum: 
          - id
          - name
        sortOrder:
          $ref: '#/components/schemas/SortOrder'

      
    PaginationContextProfile:
      type: object
      required: 
      - maxItemsPerPage
      properties:
        model_type:
          type: string
          enum:
          - PaginationContext
        maxItemsPerPage:
          type: integer
          format: int32
          default: 20
        lastReturnedPageNumber:
          type: integer
          format: int32
        totalItemsReturned:
          type: integer
          format: int32
        lastPage:
          type: boolean
        cursor:
          type: string
      example: 
        model_type: PaginationContext
        maxItemsPerPage: 10
          
      
    PaginationResponseProfile:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
        context:
          $ref: '#/components/schemas/PaginationContextProfile'
        
#
# Other Objects
#
    AutoOrManualString:
      type: object
      properties:
        auto:
          type: boolean
        value:
          type: string      
    
    BestAPSteerType:
      type: string
      enum:
        - both
        - loadBalanceOnly
        - linkQualityOnly
    
    RadioType:
      type: string
      enum:
        - is5GHz
        - is2dot4GHz
        - is5GHzU
        - is5GHzL
    
    StateSetting:
      type: string
      enum:
        - enabled
        - disabled
    
    NetworkForwardMode:
      type: string
      enum:
        - BRIDGE
        - NAT
        
    PairLongLong:
      properties:
        value1:
          type: integer
          format: int64
        value2:
          type: integer
          format: int64
        
    
## ---------------------------------------------------------------------------
security:
 - tip_wlan_ts_auth: []
paths:
 
  /api/profile:
    post:
      tags:
      - Profile Data
      summary: Creates new Profile
      operationId: createProfile
      requestBody:
        description: Profile info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    put:
      tags:
      - Profile Data
      summary: Updates profile record
      operationId: updateProfile
      requestBody:
        description: Profile info
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    delete:
      tags:
      - Profile Data
      summary: Deletes Profile record
      operationId: deleteProfileById
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    get:
      tags:
      - Profile Data
      summary: Get profile using profileId
      operationId: getProfileById
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
    
  /api/profile/orNull:
     get:
      tags:
      - Profile Data
      summary: Get profile using profileId else returns null
      operationId: getProfileByIdOrNull
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/inSet:
     get:
      tags:
      - Profile Data
      summary: Retrieves profile within a specified set
      operationId: getProfileBySet
      parameters:
      - name: profileIdSet
        in: query
        description: Set of profile IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
  
  /api/profile/forCustomer:
     get:
      tags:
      - Profile Data
      summary: Get equipment By customerId
      operationId: getEquipmentByCustomerId
      parameters:
      - name: customerId
        in: query
        description: customer id
        required: true
        schema:
          type: integer
          format: int32
      - name: sortBy
        in: query
        description: sort options
        required: true
        schema:
          type: array
          items:
            $ref: '#/components/schemas/SortColumnsProfile'
      - name: paginationContext
        in: query
        description: pagination context
        required: false
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/PaginationContextProfile'
            examples:
              initialPginationContext:
                value:
                  model_type: PaginationContext
                  maxItemsPerPage: 10
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationResponseProfile'
        500:
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/withChildren:
     get:
      tags:
      - Profile Data
      summary: Get a profile with its children
      operationId: getProfileWithChildren
      parameters:
      - name: profileId
        in: query
        description: Profile ID
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        500: 
          $ref: '#/components/responses/GenericApiError'
          
  /api/profile/topLevelProfiles:
     get:
      tags:
      - Profile Data
      summary: Get top level profiles
      operationId: getTopLevelProfiles
      parameters:
      - name: profileIdSet
        in: query
        description: Set of profile IDs
        required: true
        content:
          text/plain:
            schema:
              type: array
              items:
                type: integer
                format: int64
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PairLongLong'
        500: 
          $ref: '#/components/responses/GenericApiError'
          










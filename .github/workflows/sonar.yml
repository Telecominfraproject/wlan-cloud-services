name: Run sonar analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  SONAR_URL: https://sonarcloud.io
  SONAR_ORGANIZATION: telecominfraproject
#
jobs:
  sonar:
    strategy:
      matrix:
        project:
          - alarm-datastore-common-test
          - alarm-datastore-inmemory
          - alarm-datastore-interface
          - alarm-datastore-rdbms
          - alarm-models
          - alarm-service
          - alarm-service-interface
          - alarm-service-local
          - alarm-service-remote
          - all-cloud-and-opensync-gw-in-one-docker
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        path: wlan-cloud-services
        fetch-depth: 0
    - name: Checkout dependency Telecominfraproject/wlan-cloud-root
      uses: actions/checkout@v2
      with:
        repository: Telecominfraproject/wlan-cloud-root
        path: wlan-cloud-root
        fetch-depth: 0
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
        server-id: tip-wlan-cloud-maven-repo
        server-username: MAVEN_REPO_USERNAME
        server-password: MAVEN_REPO_PASSWORD
    - name: Maven build
      working-directory: wlan-cloud-services/${{ matrix.project }}
      env:
        MAVEN_REPO_USERNAME: build-pipeline
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
      run: mvn clean install
    - name: Run sonar
      working-directory: wlan-cloud-services/${{ matrix.project }}
      env:
        MAVEN_REPO_USERNAME: build-pipeline
        MAVEN_REPO_PASSWORD: ${{ secrets.MAVEN_REPO_PASSWORD }}
      run: mvn sonar:sonar -Dsonar.host.url=${{ env.SONAR_URL }} -Dsonar.login=${{ secrets.SONAR_LOGIN }} -Dsonar.organization=${{ env.SONAR_ORGANIZATION }} -Dsonar.projectKey=com.telecominfraproject.wlan:${{ matrix.project }}
